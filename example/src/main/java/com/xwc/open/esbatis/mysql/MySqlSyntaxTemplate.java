package com.xwc.open.esbatis.mysql;import com.xwc.open.esbatis.enums.ConditionType;import com.xwc.open.esbatis.enums.GroupType;import com.xwc.open.esbatis.interfaces.SyntaxTemplate;import com.xwc.open.esbatis.meta.TemplateMate;import java.util.HashMap;import java.util.Map;/** * 创建人：徐卫超 * 时间：2019/8/4 10:08 * 功能： * 备注： */public class MySqlSyntaxTemplate implements SyntaxTemplate {    private static Map<ConditionType, TemplateMate> map = new HashMap<>();    static {        /**         * --------------------          CLOUM_FIELD         */        map.put(ConditionType.EQUEL,                new TemplateMate(" AND %s = %s ", GroupType.CLOUM_FIELD));        map.put(ConditionType.NOT_EQUEL,                new TemplateMate(" AND %s != %s ", GroupType.CLOUM_FIELD));        map.put(ConditionType.GT,                new TemplateMate(" AND %s < %s ", GroupType.CLOUM_FIELD));        map.put(ConditionType.LT,                new TemplateMate(" AND %s > %s ", GroupType.CLOUM_FIELD));        map.put(ConditionType.GTQ,                new TemplateMate(" AND %s <= %s ", GroupType.CLOUM_FIELD));        map.put(ConditionType.LTQ,                new TemplateMate(" AND %s >= %s ", GroupType.CLOUM_FIELD));        map.put(ConditionType.LIKE,                new TemplateMate(" AND %s LIKE CONCAT('%%', %s, '%%') ", GroupType.CLOUM_FIELD));        map.put(ConditionType.LEFT_LIKE,                new TemplateMate(" AND %s LIKE CONCAT('%%', %s) ", GroupType.CLOUM_FIELD));        map.put(ConditionType.RIGHT_LIKE,                new TemplateMate(" AND %s LIKE CONCAT( %s, '%%') ", GroupType.CLOUM_FIELD));        map.put(ConditionType.NOT_LIKE,                new TemplateMate(" AND %s NOT LIKE CONCAT('%%', %s, '%%') ", GroupType.CLOUM_FIELD));        map.put(ConditionType.NOT_LEFT_LIKE,                new TemplateMate(" AND %s  NOT LIKE CONCAT('%%', %s) ", GroupType.CLOUM_FIELD));        map.put(ConditionType.NOT_RIGHT_LIKE,                new TemplateMate(" AND %s NOT LIKE CONCAT(%s, '%%') ", GroupType.CLOUM_FIELD));        map.put(ConditionType.SET_PARAM,                new TemplateMate(" %s = %s ", GroupType.CLOUM_IN_FILED));        /**         * --------------------          CLOUM_IN_FILED         */        map.put(ConditionType.IN,                new TemplateMate(" AND %s IN <foreach item='item' index='index' collection='%s'  open='(' separator=',' close=')'> #{item} </foreach> ", GroupType.CLOUM_IN_FILED));        map.put(ConditionType.NOT_IN,                new TemplateMate(" AND %s NOT IN <foreach item='item' index='index' collection='%s'  open='(' separator=',' close=')'> #{item} </foreach> ", GroupType.CLOUM_IN_FILED));        /**         * --------------------          CLOUM_SYNTAX         */        map.put(ConditionType.IS_NULL,                new TemplateMate(" AND %s IS NULL ", GroupType.JUDGE_NULL));        map.put(ConditionType.NOT_NULL,                new TemplateMate(" AND %s IS NOT NULL ", GroupType.JUDGE_NULL));        /**         * SYNTAX_FILED         */        map.put(ConditionType.LIMIT_START,                new TemplateMate(" LIMIT %s,", GroupType.MYSQL_START));        map.put(ConditionType.LIMIT_OFFSET,                new TemplateMate(" , %s", GroupType.MYSQL_OFFSET));    }    @Override    public String template(ConditionType type) {        return get(type).getTemplate();    }    @Override    public GroupType group(ConditionType type) {        return get(type).getType();    }    private TemplateMate get(ConditionType type) {        TemplateMate templateMate = map.get(type);        if (templateMate == null) {            throw new RuntimeException("数据库不支持该操作:" + type);        }        return templateMate;    }}