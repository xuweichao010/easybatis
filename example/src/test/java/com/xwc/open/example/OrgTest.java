package com.xwc.open.example;import com.xwc.open.example.dao.OrgMapper;import com.xwc.open.example.entity.Org;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.test.context.junit4.SpringRunner;import java.util.ArrayList;/** * 创建人：徐卫超 * 时间：2019/8/3 15:58 */@RunWith(SpringRunner.class)@SpringBootTest(classes = Application.class)public class OrgTest {    @Autowired    private OrgMapper orgMapper;    @Test    public void testPrimaryKeySelect() {        Org org = orgMapper.selectKey("200");        System.out.println("EasyBatis查询结果: " + org.toString());        /** 日志和输出结果         JDBC Connection [com.mysql.jdbc.JDBC4Connection@20134094] will not be managed by Spring         ==>  Preparing: SELECT code, name, parent_code, parent_name, address FROM t_org WHERE code = ?         ==> Parameters: 200(String)         <==    Columns: code, name, parent_code, parent_name, address         <==        Row: 200, 总公司, , 0, 中国区域         <==      Total: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d8286c4]         EasyBatis查询结果: Org{code='200', name='总公司', parentCode='', parentName='0', address='中国区域'}         */    }    @Test    public void testUpdateByPrimaryKey() {        Org org = orgMapper.selectKey("200");        System.out.println("EasyBatis查询结果: " + org.toString());        org.setParentName("EasyBatis");        Long count = orgMapper.update(org);        System.out.println("影响的记录条数: " + count);        org = orgMapper.selectKey("200");        System.out.println("EasyBatis修改数据结果: " + org.toString());        /** 日志和输出结果         JDBC Connection [com.mysql.jdbc.JDBC4Connection@747835f5] will not be managed by Spring         ==>  Preparing: SELECT code, name, parent_code, parent_name, address FROM t_org WHERE code = ?         ==> Parameters: 200(String)         <==    Columns: code, name, parent_code, parent_name, address         <==        Row: 200, 总公司, , EasyBatis, 中国区域         <==      Total: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c0c4c0a]         EasyBatis查询结果: Org{code='200', name='总公司', parentCode='', parentName='EasyBatis', address='中国区域'}         Creating a new SqlSession         SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51c65a43] was not registered for synchronization because synchronization is not active         JDBC Connection [com.mysql.jdbc.JDBC4Connection@747835f5] will not be managed by Spring         ==>  Preparing: UPDATE t_org SET name=?, parent_code=?, parent_name=?, address=? WHERE code = ?         ==> Parameters: 总公司(String), (String), EasyBatis(String), 中国区域(String), 200(String)         <==    Updates: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51c65a43]         影响的记录条数: 1         Creating a new SqlSession         SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e140497] was not registered for synchronization because synchronization is not active         JDBC Connection [com.mysql.jdbc.JDBC4Connection@747835f5] will not be managed by Spring         ==>  Preparing: SELECT code, name, parent_code, parent_name, address FROM t_org WHERE code = ?         ==> Parameters: 200(String)         <==    Columns: code, name, parent_code, parent_name, address         <==        Row: 200, 总公司, , EasyBatis, 中国区域         <==      Total: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e140497]         EasyBatis修改数据结果: Org{code='200', name='总公司', parentCode='', parentName='EasyBatis', address='中国区域'}         */    }    @Test    public void testInsertCutomeId() {        Org org = new Org();        org.setCode("200005");        org.setName("武汉二公司");        org.setParentName("总公司");        org.setParentCode("200");        org.setAddress("武汉江汉区");        Long count = orgMapper.insert(org);        System.out.println("影响的记录条数: " + count);        Org dbOrg = orgMapper.selectKey("200005");        System.out.println("EasyBatis查询结果: " + dbOrg.toString());        /** 日志和输出结果         JDBC Connection [com.mysql.jdbc.JDBC4Connection@8e25d3f] will not be managed by Spring         ==>  Preparing: INSERT INTO t_org ( code, name, parent_code, parent_name, address) VALUES ( ?, ?, ?, ?, ?)         ==> Parameters: 200005(String), 武汉二公司(String), 200(String), 总公司(String), 武汉江汉区(String)         <==    Updates: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db77402]         影响的记录条数: 1         Creating a new SqlSession         SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51d0ec6f] was not registered for synchronization because synchronization is not active         JDBC Connection [com.mysql.jdbc.JDBC4Connection@8e25d3f] will not be managed by Spring         ==>  Preparing: SELECT code, name, parent_code, parent_name, address FROM t_org WHERE code = ?         ==> Parameters: 200005(String)         <==    Columns: code, name, parent_code, parent_name, address         <==        Row: 200005, 武汉二公司, 200, 总公司, 武汉江汉区         <==      Total: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51d0ec6f]         EasyBatis查询结果: Org{code='200005', name='武汉二公司', parentCode='200', parentName='总公司', address='武汉江汉区'}         */    }    @Test    public void testInsertBatchCutomeId() {        ArrayList<Org> list = new ArrayList<>();        Org org = new Org();        org.setCode("200006");        org.setName("武汉三公司");        org.setParentName("总公司");        org.setParentCode("200");        org.setAddress("武汉江汉区");        list.add(org);        org = new Org();        org.setCode("200007");        org.setName("武汉四公司");        org.setParentName("总公司");        org.setParentCode("200");        org.setAddress("武汉江汉区");        list.add(org);        org = new Org();        org.setCode("200008");        org.setName("武汉五公司");        org.setParentName("总公司");        org.setParentCode("200");        org.setAddress("武汉江汉区");        list.add(org);        Long count = orgMapper.insertBatch(list);        System.out.println("影响的记录条数: " + count);        Org dbOrg = orgMapper.selectKey("200008");        System.out.println("EasyBatis查询结果: " + dbOrg.toString());        /** 日志和输出结果         JDBC Connection [com.mysql.jdbc.JDBC4Connection@55acec99] will not be managed by Spring         ==>  Preparing: INSERT INTO t_org ( code, name, parent_code, parent_name, address) VALUES ( ?, ?, ?, ?, ?) , ( ?, ?, ?, ?, ?) , ( ?, ?, ?, ?, ?)         ==> Parameters: 200006(String), 武汉三公司(String), 200(String), 总公司(String), 武汉江汉区(String), 200007(String), 武汉四公司(String), 200(String), 总公司(String), 武汉江汉区(String), 200008(String), 武汉五公司(String), 200(String), 总公司(String), 武汉江汉区(String)         <==    Updates: 3         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fe512d2]         影响的记录条数: 3         Creating a new SqlSession         SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ea996f] was not registered for synchronization because synchronization is not active         JDBC Connection [com.mysql.jdbc.JDBC4Connection@55acec99] will not be managed by Spring         ==>  Preparing: SELECT code, name, parent_code, parent_name, address FROM t_org WHERE code = ?         ==> Parameters: 200008(String)         <==    Columns: code, name, parent_code, parent_name, address         <==        Row: 200008, 武汉五公司, 200, 总公司, 武汉江汉区         <==      Total: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ea996f]         EasyBatis查询结果: Org{code='200008', name='武汉五公司', parentCode='200', parentName='总公司', address='武汉江汉区'}         */    }    @Test    public void testDeleteByPrimaryKey() {        Long count = orgMapper.delete("200008");        System.out.println("影响的记录条数: " + count);        Org dbOrg = orgMapper.selectKey("200008");        System.out.println("EasyBatis查询结果: " + (dbOrg == null ? "查询结果为空" : dbOrg.toString()));        /** 日志和输出结果         JDBC Connection [com.mysql.jdbc.JDBC4Connection@7d0100ea] will not be managed by Spring         ==>  Preparing: DELETE FROM t_org WHERE code = ?         ==> Parameters: 200008(String)         <==    Updates: 1         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5809fa26]         影响的记录条数: 1         Creating a new SqlSession         SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182e7eda] was not registered for synchronization because synchronization is not active         JDBC Connection [com.mysql.jdbc.JDBC4Connection@7d0100ea] will not be managed by Spring         ==>  Preparing: SELECT code, name, parent_code, parent_name, address FROM t_org WHERE code = ?         ==> Parameters: 200008(String)         <==      Total: 0         Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182e7eda]         EasyBatis查询结果: 查询结果为空         */    }}